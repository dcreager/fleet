% flt_task(3)

# NAME

flt_task -- Tasks

# SYNOPSIS

| **#include &lt;fleet.h&gt;**
|
| typedef void
| **flt_task**(struct flt \**flt*, void \**ud*, size_t *i*);


# DESCRIPTION

A *task* is the smallest unit of computation in a fleet.  When you schedule a
task, the fleet will decide to run it at some point, in some execution context.
(You can have some control over when and in which context, depending on which
function you use to schedule the task; see **flt_run**(3) for details.)

Each task is represented by a "task function", which is the block of code that
will execute when the fleet decides that it's time to run the task.  The *ud*
and *i* input parameters can be used to communicate with other tasks; you
provide the values to pass in to the task function when you schedule the task.

In addition to the *ud* and *i* input parameters, each task function is given a
**flt**(3) instance, which can be used to schedule additional tasks using the
**flt_run**(3) family of functions.
